import React from 'react';
import { Advice } from '../types';

interface AdviceCardProps {
  advice: Advice;
}

const LeafIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
        <path strokeLinecap="round" strokeLinejoin="round" d="M14.121 15.536A9.003 9.003 0 0112 15c-1.892 0-3.642.56-5.036 1.536m9.072-5.072a9.003 9.003 0 00-9.072 0M12 21a9.003 9.003 0 009-9H3a9.003 9.003 0 009 9z" />
    </svg>
);

const HeartIcon = () => (
    <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
        <path strokeLinecap="round" strokeLinejoin="round" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
    </svg>
);

const AdviceCard: React.FC<AdviceCardProps> = ({ advice }) => {
  return (
    <div className="bg-white p-6 md:p-8 rounded-xl shadow-lg border border-gray-200 animate-fade-in space-y-8">
      {advice.urgencyWarning && (
        <div className="p-4 rounded-lg bg-red-100 border border-red-300 text-red-800">
          <h3 className="text-xl font-bold flex items-center">
             <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 mr-2 animate-pulse" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
                <path strokeLinecap="round" strokeLinejoin="round" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
            </svg>
            Urgent Medical Attention Recommended
          </h3>
          <p className="mt-2 text-lg">{advice.urgencyWarning}</p>
        </div>
      )}

      <div>
        <h2 className="text-2xl font-bold text-gray-800 mb-4 border-b pb-2">Analysis Summary</h2>
        <div className="space-y-3">
            <h3 className="text-lg font-semibold text-gray-700">Possible Conditions</h3>
            <ul className="list-disc list-inside space-y-2 text-gray-600">
                {advice.possibleConditions.map((item, index) => (
                    <li key={index}><strong>{item.name}:</strong> {item.description}</li>
                ))}
            </ul>
        </div>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-cyan-50 p-4 rounded-lg border border-cyan-200">
          <h3 className="font-bold text-lg text-cyan-800 flex items-center mb-2"><LeafIcon /> <span className="ml-2">Ayurvedic Suggestions</span></h3>
          <ul className="space-y-3 text-cyan-900">
            {advice.ayurvedicSuggestions.map((item, index) => (
              <li key={index}><strong>{item.name}:</strong> {item.advice}</li>
            ))}
          </ul>
        </div>
        <div className="bg-green-50 p-4 rounded-lg border border-green-200">
          <h3 className="font-bold text-lg text-green-800 flex items-center mb-2"><LeafIcon /> <span className="ml-2">Home Remedies</span></h3>
          <ul className="space-y-3 text-green-900">
            {advice.homeRemedies.map((item, index) => (
              <li key={index}><strong>{item.name}:</strong> {item.advice}</li>
            ))}
          </ul>
        </div>
        <div className="bg-teal-50 p-4 rounded-lg border border-teal-200">
          <h3 className="font-bold text-lg text-teal-800 flex items-center mb-2"><HeartIcon /> <span className="ml-2">Lifestyle Advice</span></h3>
          <ul className="space-y-3 text-teal-900">
            {advice.lifestyleAdvice.map((item, index) => (
              <li key={index}><strong>{item.name}:</strong> {item.advice}</li>
            ))}
          </ul>
        </div>
      </div>
      <Disclaimer isCardVersion={true}/>
    </div>
  );
};

const Disclaimer: React.FC<{ isCardVersion?: boolean }> = ({ isCardVersion }) => (
    <div className={`p-4 rounded-lg ${isCardVersion ? 'bg-emerald-50 text-emerald-800' : 'bg-cyan-100 border border-cyan-300 text-cyan-800'}`}>
      <h3 className="font-bold flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.21 3.001-1.742 3.001H4.42c-1.532 0-2.492-1.667-1.742-3.001l5.58-9.92zM10 13a1 1 0 110-2 1 1 0 010 2zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
        </svg>
        Important Disclaimer
      </h3>
      <p className="mt-2 text-sm">
        This information is generated by an AI and is not a substitute for professional medical advice, diagnosis, or treatment. Always seek the advice of your physician or other qualified health provider with any questions you may have regarding a medical condition.
      </p>
    </div>
);


export default AdviceCard;